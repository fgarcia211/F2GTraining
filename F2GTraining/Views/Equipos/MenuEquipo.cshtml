@model List<Equipo>

@{
    Usuario user = Context.Session.GetObject<Usuario>("USUARIO");

    string controllerNewTeam = "Equipos";
    string actionNewTeam = "CrearEquipo";

    string controllerPlayer = "Jugadores";

    string actionShowPlayer = "GraficaJugador";
    string actionDeletePlayer = "DeleteJugador";

    List<Jugador> jugadores = ViewData["JUGADORESUSUARIO"] as List<Jugador>;

    List<int> idportero = new List<int>(new int[] {1});
    List<int> iddefensa = new List<int>(new int[] {2,3,4,5});
    List<int> idmedios = new List<int>(new int[] {6,7,8,9,10});
    List<int> iddelanteros = new List<int>(new int[] {11,12,13,14});

}

@section CSSLinks{
    <link rel="stylesheet" href="~/css/menuequipo.css" asp-append-version="true" />
}

@section ZonaLogueo{
    <div class="user-section">
        <p>@user.Nombre</p>
        <a asp-controller="Usuarios" asp-action="CerrarSesion">Cerrar sesion</a>
    </div>
}

@section Scripts{
    <script>
        $(function() {
            esconderEquipos();         
        });
    </script>
    <script src="~/js/menuequipo.js" asp-append-version="true"></script>
}

<div class="teamview-menu">

    <div class="team-section">
        @if (Model != null)
        {
            //Cambiar valor de equipo (TODO EL EQUIPO) - OPCIONAL
            <input type="hidden" id="equiposeleccionado" value="@Model[0].IdEquipo"/>
            <p>Selección de equipo</p>
            <select id="selectorequipo" onchange="esconderEquipos()">
                @foreach (Equipo equipo in Model)
                {
                    <option value="@equipo.IdEquipo">@equipo.Nombre</option>
                }
            </select>

            //Comprobar equipo seleccionado en jquery y cambiar contenido de dentro
            @foreach (Equipo equipo in Model)
            {
                <div class="image-team" id="teamimage-@equipo.IdEquipo">
                    <img src="@equipo.Imagen.Replace("~",string.Empty)" />
                </div>
                <div class="link-team-actions" id="teamaction-@equipo.IdEquipo">
                    <a asp-controller="Entrenamientos" asp-action="ListaSesiones" asp-route-idequipo="@equipo.IdEquipo" class="minibutton-teamview">SESIONES DE ENTRENAMIENTO</a>
                    <a asp-controller="Jugadores" asp-action="CrearJugador" asp-route-idequipo="@equipo.IdEquipo" class="minibutton-teamview">AÑADIR NUEVO JUGADOR</a>
                    <a asp-controller="Equipos" asp-action="CrearEquipo" class="minibutton-teamview">NUEVO EQUIPO</a>
                </div>
            }
            
        }
        else
        {
            <div class="newteam-container">
                <p class="info-newteam">PARA PODER USAR LA APLICACION NECESITAS REGISTRAR EQUIPOS</p>
                <p class="info-newteam">TODAVIA NO HAS CREADO NINGUN EQUIPO. PULSA PARA CREAR UN NUEVO EQUIPO</p>
                <button onclick="location.href='@Url.Action(actionNewTeam, controllerNewTeam, new {})'">NUEVO EQUIPO</button>
            </div>   
        }
    </div>

    @if (Model != null)
    {
        <div class="player-section">
            <div class="border-section"></div>
            <div class="player-zone">
                @if (jugadores != null)
                {
                    <div class="player-goalkeeper">
                        <div class="title-position">PORTEROS</div>
                        @foreach (Jugador jug in jugadores)
                        {
                            @if(idportero.Contains(jug.IdPosicion)){
                                <div class="player" id="player-@jug.IdJugador" onclick="muestraOpciones(@jug.IdJugador)" data-idequipo="@jug.IdEquipo">@jug.Nombre.ToUpper()</div>
                                <div class="options-player" id="optplayer-@jug.IdJugador" style="display: none">
                                    <button onclick="location.href='@Url.Action(actionShowPlayer, controllerPlayer, new { idjugador = jug.IdJugador})'">VER GRAFICA</button>
                                    <button onclick="location.href='@Url.Action(actionDeletePlayer, controllerPlayer, new { idjugador = jug.IdJugador})'">ELIMINAR JUGADOR</button>
                                </div>
                            }
                        
                        }
                    </div>
                    <div class="player-defense">
                        <div class="title-position">DEFENSAS</div>
                        @foreach (Jugador jug in jugadores)
                        {
                            @if(iddefensa.Contains(jug.IdPosicion)){
                                <div class="player" id="player-@jug.IdJugador" onclick="muestraOpciones(@jug.IdJugador)" data-idequipo="@jug.IdEquipo">@jug.Nombre.ToUpper()</div>
                                <div class="options-player" id="optplayer-@jug.IdJugador" style="display: none">
                                    <button onclick="location.href='@Url.Action(actionShowPlayer, controllerPlayer, new { idjugador = jug.IdJugador})'">VER GRAFICA</button>
                                    <button onclick="location.href='@Url.Action(actionDeletePlayer, controllerPlayer, new { idjugador = jug.IdJugador})'">ELIMINAR JUGADOR</button>
                                </div>
                            }
                        
                        }
                    </div>
                    <div class="player-midfield">
                        <div class="title-position">MEDIOCENTROS</div>
                        @foreach (Jugador jug in jugadores)
                        {
                            @if(idmedios.Contains(jug.IdPosicion)){
                                <div class="player" id="player-@jug.IdJugador" onclick="muestraOpciones(@jug.IdJugador)" data-idequipo="@jug.IdEquipo">@jug.Nombre.ToUpper()</div>
                                <div class="options-player" id="optplayer-@jug.IdJugador" style="display: none">
                                    <button onclick="location.href='@Url.Action(actionShowPlayer, controllerPlayer, new { idjugador = jug.IdJugador})'">VER GRAFICA</button>
                                    <button onclick="location.href='@Url.Action(actionDeletePlayer, controllerPlayer, new { idjugador = jug.IdJugador})'">ELIMINAR JUGADOR</button>
                                </div>
                            }
                        
                        }
                    </div>
                    <div class="player-striker">
                        <div class="title-position">DELANTEROS</div>
                        @foreach (Jugador jug in jugadores)
                        {
                            @if(iddelanteros.Contains(jug.IdPosicion)){
                                <div class="player" id="player-@jug.IdJugador" onclick="muestraOpciones(@jug.IdJugador)" data-idequipo="@jug.IdEquipo">@jug.Nombre.ToUpper()</div>
                                <div class="options-player" id="optplayer-@jug.IdJugador" style="display: none">
                                    <button onclick="location.href='@Url.Action(actionShowPlayer, controllerPlayer, new { idjugador = jug.IdJugador})'">VER GRAFICA</button>
                                    <button onclick="location.href='@Url.Action(actionDeletePlayer, controllerPlayer, new { idjugador = jug.IdJugador})'">ELIMINAR JUGADOR</button>
                                </div>
                            }
                        
                        }
                    </div>
                }
                else
                {
                    <p style="color:black">SIN JUGADORES EN NINGÚN EQUIPO</p>
                }
            </div>
            <div class="border-section"></div>
        </div>
    }

</div>

